name: Release CI

on:
  push:
    branches: [ main ]
    tags:
      - "*"

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm i -g yarn
      name: Installing Yarn

    - run: yarn install --frozen-lockfile
      name: Installing dependencies

    - run: yarn lint
      name: Checking linting

    - run: yarn run build
      name: Running build

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: static-app
        path: out/

  release:
    name: Release static app
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: static-app
      - name: Compress content
        uses: thedoctor0/zip-release@master
        with:
          filename: static_app.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./static_app.zip
          asset_name: static_app${{ github.ref }}.zip
          asset_content_type: application/zip




